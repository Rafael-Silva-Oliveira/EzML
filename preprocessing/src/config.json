{
  "path_backbone": "C://Users//rafaelo//OneDrive - NTNU//Documents//Projects//preprocessing//preprocessing//preprocessing",
  "data": "data//raw//METABRIC_RNA_Mutation.csv",
  "preprocessing": {
    "numerical_preprocessing": {
      "StandardScaler": {
        "include": ["all"],
        "exclude": [
          "neoplasm_histologic_grade",
          "brca1",
          "brca2",
          "palb2",
          "pten",
          "tp53",
          "atm",
          "cdh1",
          "chek2",
          "nbn",
          "nf1",
          "stk11",
          "bard1",
          "mlh1",
          "msh2",
          "msh6",
          "pms2",
          "epcam",
          "rad51c",
          "rad51d",
          "rad50",
          "rb1",
          "rbl1",
          "rbl2",
          "ccna1",
          "ccnb1",
          "cdk1",
          "ccne1",
          "cdk2",
          "cdc25a",
          "ccnd1",
          "cdk4",
          "cdk6",
          "ccnd2",
          "cdkn2a",
          "cdkn2b",
          "myc",
          "cdkn1a",
          "cdkn1b",
          "e2f1",
          "e2f2",
          "e2f3",
          "e2f4",
          "e2f5",
          "e2f6",
          "e2f7",
          "e2f8",
          "src",
          "jak1",
          "jak2",
          "stat1",
          "stat2",
          "stat3",
          "stat5a",
          "stat5b",
          "mdm2",
          "tp53bp1",
          "adam10",
          "adam17",
          "aph1a",
          "aph1b",
          "arrdc1",
          "cir1",
          "ctbp1",
          "ctbp2",
          "cul1",
          "dll1",
          "dll3",
          "dll4",
          "dtx1",
          "dtx2",
          "dtx3",
          "dtx4",
          "ep300",
          "fbxw7",
          "hdac1",
          "hdac2",
          "hes1",
          "hes5",
          "heyl",
          "itch",
          "jag1",
          "jag2",
          "kdm5a",
          "lfng",
          "maml1",
          "maml2",
          "maml3",
          "ncor2",
          "ncstn",
          "notch1",
          "notch2",
          "notch3",
          "nrarp",
          "numb",
          "numbl",
          "psen1",
          "psen2",
          "psenen",
          "rbpj",
          "rbpjl",
          "rfng",
          "snw1",
          "spen",
          "hes2",
          "hes4",
          "hes7",
          "hey1",
          "hey2",
          "acvr1",
          "acvr1b",
          "acvr1c",
          "acvr2a",
          "acvr2b",
          "acvrl1",
          "akt1",
          "akt1s1",
          "akt2",
          "apaf1",
          "arl11",
          "atr",
          "aurka",
          "bad",
          "bcl2",
          "bcl2l1",
          "bmp10",
          "bmp15",
          "bmp2",
          "bmp3",
          "bmp4",
          "bmp5",
          "bmp6",
          "bmp7",
          "bmpr1a",
          "bmpr1b",
          "bmpr2",
          "braf",
          "casp10",
          "casp3",
          "casp6",
          "casp7",
          "casp8",
          "casp9",
          "chek1",
          "csf1",
          "csf1r",
          "cxcl8",
          "cxcr1",
          "cxcr2",
          "dab2",
          "diras3",
          "dlec1",
          "dph1",
          "egfr",
          "eif4e",
          "eif4ebp1",
          "eif5a2",
          "erbb2",
          "erbb3",
          "erbb4",
          "fas",
          "fgf1",
          "fgfr1",
          "folr1",
          "folr2",
          "folr3",
          "foxo1",
          "foxo3",
          "gdf11",
          "gdf2",
          "gsk3b",
          "hif1a",
          "hla-g",
          "hras",
          "igf1",
          "igf1r",
          "inha",
          "inhba",
          "inhbc",
          "itgav",
          "itgb3",
          "izumo1r",
          "kdr",
          "kit",
          "kras",
          "map2k1",
          "map2k2",
          "map2k3",
          "map2k4",
          "map2k5",
          "map3k1",
          "map3k3",
          "map3k4",
          "map3k5",
          "mapk1",
          "mapk12",
          "mapk14",
          "mapk3",
          "mapk4",
          "mapk6",
          "mapk7",
          "mapk8",
          "mapk9",
          "mdc1",
          "mlst8",
          "mmp1",
          "mmp10",
          "mmp11",
          "mmp12",
          "mmp13",
          "mmp14",
          "mmp15",
          "mmp16",
          "mmp17",
          "mmp19",
          "mmp2",
          "mmp21",
          "mmp23b",
          "mmp24",
          "mmp25",
          "mmp26",
          "mmp27",
          "mmp28",
          "mmp3",
          "mmp7",
          "mmp9",
          "mtor",
          "nfkb1",
          "nfkb2",
          "opcml",
          "pdgfa",
          "pdgfb",
          "pdgfra",
          "pdgfrb",
          "pdpk1",
          "peg3",
          "pik3ca",
          "pik3r1",
          "pik3r2",
          "plagl1",
          "ptk2",
          "rab25",
          "rad51",
          "raf1",
          "rassf1",
          "rheb",
          "rictor",
          "rps6",
          "rps6ka1",
          "rps6ka2",
          "rps6kb1",
          "rps6kb2",
          "rptor",
          "slc19a1",
          "smad1",
          "smad2",
          "smad3",
          "smad4",
          "smad5",
          "smad6",
          "smad7",
          "smad9",
          "sptbn1",
          "terc",
          "tert",
          "tgfb1",
          "tgfb2",
          "tgfb3",
          "tgfbr1",
          "tgfbr2",
          "tgfbr3",
          "tsc1",
          "tsc2",
          "vegfa",
          "vegfb",
          "wfdc2",
          "wwox",
          "zfyve9",
          "arid1a",
          "arid1b",
          "cbfb",
          "gata3",
          "kmt2c",
          "kmt2d",
          "myh9",
          "ncor1",
          "pde4dip",
          "ptprd",
          "ros1",
          "runx1",
          "tbx3",
          "abcb1",
          "abcb11",
          "abcc1",
          "abcc10",
          "bbc3",
          "bmf",
          "cyp2c8",
          "cyp3a4",
          "fgf2",
          "fn1",
          "map2",
          "map4",
          "mapt",
          "nr1i2",
          "slco1b3",
          "tubb1",
          "tubb4a",
          "tubb4b",
          "twist1",
          "adgra2",
          "afdn",
          "aff2",
          "agmo",
          "agtr2",
          "ahnak",
          "ahnak2",
          "akap9",
          "alk",
          "apc",
          "arid2",
          "arid5b",
          "asxl1",
          "asxl2",
          "bap1",
          "bcas3",
          "birc6",
          "cacna2d3",
          "ccnd3",
          "chd1",
          "clk3",
          "clrn2",
          "col12a1",
          "col22a1",
          "col6a3",
          "ctcf",
          "ctnna1",
          "ctnna3",
          "dnah11",
          "dnah2",
          "dnah5",
          "dtwd2",
          "fam20c",
          "fanca",
          "fancd2",
          "flt3",
          "foxp1",
          "frmd3",
          "gh1",
          "gldc",
          "gpr32",
          "gps2",
          "hdac9",
          "herc2",
          "hist1h2bc",
          "kdm3a",
          "kdm6a",
          "klrg1",
          "l1cam",
          "lama2",
          "lamb3",
          "large1",
          "ldlrap1",
          "lifr",
          "lipi",
          "magea8",
          "map3k10",
          "map3k13",
          "men1",
          "mtap",
          "muc16",
          "myo1a",
          "myo3a",
          "ncoa3",
          "nek1",
          "nf2",
          "npnt",
          "nr2f1",
          "nr3c1",
          "nras",
          "nrg3",
          "nt5e",
          "or6a2",
          "palld",
          "pbrm1",
          "ppp2cb",
          "ppp2r2a",
          "prkacg",
          "prkce",
          "prkcq",
          "prkcz",
          "prkg1",
          "prps2",
          "prr16",
          "ptpn22",
          "ptprm",
          "rasgef1b",
          "rpgr",
          "ryr2",
          "sbno1",
          "setd1a",
          "setd2",
          "setdb1",
          "sf3b1",
          "sgcd",
          "shank2",
          "siah1",
          "sik1",
          "sik2",
          "smarcb1",
          "smarcc1",
          "smarcc2",
          "smarcd1",
          "spaca1",
          "stab2",
          "stmn2",
          "syne1",
          "taf1",
          "taf4b",
          "tbl1xr1",
          "tg",
          "thada",
          "thsd7a",
          "ttyh1",
          "ubr5",
          "ush2a",
          "usp9x",
          "utrn",
          "zfp36l1",
          "ackr3",
          "akr1c1",
          "akr1c2",
          "akr1c3",
          "akr1c4",
          "akt3",
          "ar",
          "bche",
          "cdk8",
          "cdkn2c",
          "cyb5a",
          "cyp11a1",
          "cyp11b2",
          "cyp17a1",
          "cyp19a1",
          "cyp21a2",
          "cyp3a43",
          "cyp3a5",
          "cyp3a7",
          "ddc",
          "hes6",
          "hsd17b1",
          "hsd17b10",
          "hsd17b11",
          "hsd17b12",
          "hsd17b13",
          "hsd17b14",
          "hsd17b2",
          "hsd17b3",
          "hsd17b4",
          "hsd17b6",
          "hsd17b7",
          "hsd17b8",
          "hsd3b1",
          "hsd3b2",
          "hsd3b7",
          "mecom",
          "met",
          "ncoa2",
          "nrip1",
          "pik3r3",
          "prkci",
          "prkd1",
          "ran",
          "rdh5",
          "sdc4",
          "serpini1",
          "shbg",
          "slc29a1",
          "sox9",
          "spry2",
          "srd5a1",
          "srd5a2",
          "srd5a3",
          "st7",
          "star",
          "tnk2",
          "tulp4",
          "ugt2b15",
          "ugt2b17",
          "ugt2b7"
        ]
      },
      "MinMaxScaler": { "include": null, "exclude": null }
    },
    "categorical_preprocessing": {
      "OneHotEncoder": { "include": ["integrative_cluster"], "exclude": null },
      "OrdinalEncoder": { "include": ["all"], "exclude": null }
    }
  },
  "ead": {
    "pandas_profiling_report": {
      "usage": false,
      "params": {}
    },
    "statistics": {
      "usage": false
    },
    "plotting": {}
  },
  "modelling": {
    "data": {
      "target": "overall_survival",
      "features": [
        "transformed__age_at_diagnosis",
        "transformed__type_of_breast_surgery",
        "transformed__cancer_type",
        "transformed__cancer_type_detailed",
        "transformed__cellularity",
        "transformed__pam50_+_claudin-low_subtype",
        "cohort",
        "transformed__er_status_measured_by_ihc",
        "transformed__er_status",
        "neoplasm_histologic_grade",
        "transformed__her2_status_measured_by_snp6",
        "transformed__her2_status",
        "transformed__tumor_other_histologic_subtype",
        "hormone_therapy",
        "transformed__inferred_menopausal_state",
        "transformed__integrative_cluster",
        "transformed__primary_tumor_laterality",
        "lymph_nodes_examined_positive",
        "transformed__mutation_count",
        "transformed__nottingham_prognostic_index",
        "transformed__oncotree_code",
        "transformed__pr_status",
        "radio_therapy",
        "transformed__3-gene_classifier_subtype",
        "transformed__tumor_size",
        "transformed__tumor_stage",
        "brca1",
        "brca2",
        "palb2",
        "pten",
        "tp53",
        "atm",
        "cdh1",
        "chek2",
        "nbn",
        "nf1",
        "stk11",
        "bard1",
        "mlh1",
        "msh2",
        "msh6",
        "pms2",
        "epcam",
        "rad51c",
        "rad51d",
        "rad50",
        "rb1",
        "rbl1",
        "rbl2",
        "ccna1",
        "ccnb1",
        "cdk1",
        "ccne1",
        "cdk2",
        "cdc25a",
        "ccnd1",
        "cdk4",
        "cdk6",
        "ccnd2",
        "cdkn2a",
        "cdkn2b",
        "myc",
        "cdkn1a",
        "cdkn1b",
        "e2f1",
        "e2f2",
        "e2f3",
        "e2f4",
        "e2f5",
        "e2f6",
        "e2f7",
        "e2f8",
        "src",
        "jak1",
        "jak2",
        "stat1",
        "stat2",
        "stat3",
        "stat5a",
        "stat5b",
        "mdm2",
        "tp53bp1",
        "adam10",
        "adam17",
        "aph1a",
        "aph1b",
        "arrdc1",
        "cir1",
        "ctbp1",
        "ctbp2",
        "cul1",
        "dll1",
        "dll3",
        "dll4",
        "dtx1",
        "dtx2",
        "dtx3",
        "dtx4",
        "ep300",
        "fbxw7",
        "hdac1",
        "hdac2",
        "hes1",
        "hes5",
        "heyl",
        "itch",
        "jag1",
        "jag2",
        "kdm5a",
        "lfng",
        "maml1",
        "maml2",
        "maml3",
        "ncor2",
        "ncstn",
        "notch1",
        "notch2",
        "notch3",
        "nrarp",
        "numb",
        "numbl",
        "psen1",
        "psen2",
        "psenen",
        "rbpj",
        "rbpjl",
        "rfng",
        "snw1",
        "spen",
        "hes2",
        "hes4",
        "hes7",
        "hey1",
        "hey2",
        "acvr1",
        "acvr1b",
        "acvr1c",
        "acvr2a",
        "acvr2b",
        "acvrl1",
        "akt1",
        "akt1s1",
        "akt2",
        "apaf1",
        "arl11",
        "atr",
        "aurka",
        "bad",
        "bcl2",
        "bcl2l1",
        "bmp10",
        "bmp15",
        "bmp2",
        "bmp3",
        "bmp4",
        "bmp5",
        "bmp6",
        "bmp7",
        "bmpr1a",
        "bmpr1b",
        "bmpr2",
        "braf",
        "casp10",
        "casp3",
        "casp6",
        "casp7",
        "casp8",
        "casp9",
        "chek1",
        "csf1",
        "csf1r",
        "cxcl8",
        "cxcr1",
        "cxcr2",
        "dab2",
        "diras3",
        "dlec1",
        "egfr",
        "eif4e",
        "eif4ebp1",
        "eif5a2",
        "erbb2",
        "erbb3",
        "erbb4",
        "fas",
        "fgf1",
        "fgfr1",
        "folr1",
        "folr2",
        "folr3",
        "foxo1",
        "foxo3",
        "gdf11",
        "gdf2",
        "gsk3b",
        "hif1a",
        "hla-g",
        "hras",
        "igf1",
        "igf1r",
        "inha",
        "inhba",
        "inhbc",
        "itgav",
        "itgb3",
        "izumo1r",
        "kdr",
        "kit",
        "kras",
        "map2k1",
        "map2k2",
        "map2k3",
        "map2k4",
        "map2k5",
        "map3k1",
        "map3k3",
        "map3k4",
        "map3k5",
        "mapk1",
        "mapk12",
        "mapk14",
        "mapk3",
        "mapk4",
        "mapk6",
        "mapk7",
        "mapk8",
        "mapk9",
        "mdc1",
        "mlst8",
        "mmp1",
        "mmp10",
        "mmp11",
        "mmp12",
        "mmp13",
        "mmp14",
        "mmp15",
        "mmp16",
        "mmp17",
        "mmp19",
        "mmp2",
        "mmp21",
        "mmp23b",
        "mmp24",
        "mmp25",
        "mmp26",
        "mmp27",
        "mmp28",
        "mmp3",
        "mmp7",
        "mmp9",
        "mtor",
        "nfkb1",
        "nfkb2",
        "opcml",
        "pdgfa",
        "pdgfb",
        "pdgfra",
        "pdgfrb",
        "pdpk1",
        "peg3",
        "pik3ca",
        "pik3r1",
        "pik3r2",
        "plagl1",
        "ptk2",
        "rab25",
        "rad51",
        "raf1",
        "rassf1",
        "rheb",
        "rictor",
        "rps6",
        "rps6ka1",
        "rps6ka2",
        "rps6kb1",
        "rps6kb2",
        "rptor",
        "slc19a1",
        "smad1",
        "smad2",
        "smad3",
        "smad4",
        "smad5",
        "smad6",
        "smad7",
        "smad9",
        "sptbn1",
        "terc",
        "tert",
        "tgfb1",
        "tgfb2",
        "tgfb3",
        "tgfbr1",
        "tgfbr2",
        "tgfbr3",
        "tsc1",
        "tsc2",
        "vegfa",
        "vegfb",
        "wfdc2",
        "wwox",
        "zfyve9",
        "arid1a",
        "arid1b",
        "cbfb",
        "gata3",
        "kmt2c",
        "kmt2d",
        "myh9",
        "ncor1",
        "pde4dip",
        "ptprd",
        "ros1",
        "runx1",
        "tbx3",
        "abcb1",
        "abcb11",
        "abcc1",
        "abcc10",
        "bbc3",
        "bmf",
        "cyp2c8",
        "cyp3a4",
        "fgf2",
        "fn1",
        "map2",
        "map4",
        "mapt",
        "nr1i2",
        "slco1b3",
        "tubb1",
        "tubb4a",
        "tubb4b",
        "twist1",
        "adgra2",
        "afdn",
        "aff2",
        "agmo",
        "agtr2",
        "ahnak",
        "ahnak2",
        "akap9",
        "alk",
        "apc",
        "arid2",
        "arid5b",
        "asxl1",
        "asxl2",
        "bap1",
        "bcas3",
        "birc6",
        "cacna2d3",
        "ccnd3",
        "chd1",
        "clk3",
        "clrn2",
        "col12a1",
        "col22a1",
        "col6a3",
        "ctcf",
        "ctnna1",
        "ctnna3",
        "dnah11",
        "dnah2",
        "dnah5",
        "dtwd2",
        "fam20c",
        "fanca",
        "fancd2",
        "flt3",
        "foxp1",
        "frmd3",
        "gh1",
        "gldc",
        "gpr32",
        "gps2",
        "hdac9",
        "herc2",
        "hist1h2bc",
        "kdm3a",
        "kdm6a",
        "klrg1",
        "l1cam",
        "lama2",
        "lamb3",
        "large1",
        "ldlrap1",
        "lifr",
        "lipi",
        "magea8",
        "map3k10",
        "map3k13",
        "men1",
        "mtap",
        "muc16",
        "myo1a",
        "myo3a",
        "ncoa3",
        "nek1",
        "nf2",
        "npnt",
        "nr2f1",
        "nr3c1",
        "nras",
        "nrg3",
        "nt5e",
        "or6a2",
        "palld",
        "pbrm1",
        "ppp2cb",
        "ppp2r2a",
        "prkacg",
        "prkce",
        "prkcq",
        "prkcz",
        "prkg1",
        "prps2",
        "prr16",
        "ptpn22",
        "ptprm",
        "rasgef1b",
        "rpgr",
        "ryr2",
        "sbno1",
        "setd1a",
        "setd2",
        "setdb1",
        "sf3b1",
        "sgcd",
        "shank2",
        "siah1",
        "sik1",
        "sik2",
        "smarcb1",
        "smarcc1",
        "smarcc2",
        "smarcd1",
        "spaca1",
        "stab2",
        "stmn2",
        "syne1",
        "taf1",
        "taf4b",
        "tbl1xr1",
        "tg",
        "thada",
        "thsd7a",
        "ttyh1",
        "ubr5",
        "ush2a",
        "usp9x",
        "utrn",
        "zfp36l1",
        "ackr3",
        "akr1c1",
        "akr1c2",
        "akr1c3",
        "akr1c4",
        "akt3",
        "ar",
        "bche",
        "cdk8",
        "cdkn2c",
        "cyb5a",
        "cyp11a1",
        "cyp11b2",
        "cyp17a1",
        "cyp19a1",
        "cyp21a2",
        "cyp3a43",
        "cyp3a5",
        "cyp3a7",
        "ddc",
        "hes6",
        "hsd17b1",
        "hsd17b10",
        "hsd17b11",
        "hsd17b12",
        "hsd17b13",
        "hsd17b14",
        "hsd17b2",
        "hsd17b3",
        "hsd17b4",
        "hsd17b6",
        "hsd17b7",
        "hsd17b8",
        "hsd3b1",
        "hsd3b2",
        "hsd3b7",
        "mecom",
        "met",
        "ncoa2",
        "nrip1",
        "pik3r3",
        "prkci",
        "prkd1",
        "ran",
        "rdh5",
        "sdc4",
        "serpini1",
        "shbg",
        "slc29a1",
        "sox9",
        "spry2",
        "srd5a1",
        "srd5a2",
        "srd5a3",
        "st7",
        "star",
        "tnk2",
        "tulp4",
        "ugt2b15",
        "ugt2b17",
        "ugt2b7"
      ]
    },
    "feature_selection": {
      "SequentialFeatureSelector": {
        "usage": false,
        "params": {
          "n_features_to_select": 15,
          "direction": "backward",
          "scoring": "accuracy",
          "cv": {
            "RepeatedStratifiedKFold": {
              "n_splits": 10,
              "n_repeats": 3,
              "random_state": 0
            }
          }
        }
      },
      "RFECV": {
        "usage": true,
        "params": {
          "min_features_to_select": 4,
          "scoring": "accuracy",
          "step": 0.1,
          "cv": {
            "RepeatedStratifiedKFold": {
              "n_splits": 10,
              "n_repeats": 3,
              "random_state": 0
            }
          },
          "verbose": 1,
          "n_jobs": 4,
          "importance_getter": "auto"
        }
      }
    },
    "feature_engineering": {},
    "classification": {
      "usage": 1,
      "train_test_split": {
        "validation_size": 0.4,
        "test_size": 0.4,
        "shuffle": true,
        "stratify": true
      },
      "models": {
        "linear_model": {
          "LogisticRegression": {
            "use_for_ensemble": 0,
            "usage": 1,
            "run_feature_selection": true,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "logisticregression__penalty": ["l1", "l2"],
                "logisticregression__C": "np.logspace(-3, 2, 6)",
                "logisticregression__solver": ["liblinear", "saga"],
                "logisticregression__max_iter": [250]
              }
            }
          }
        },
        "svm": {
          "SVC": {
            "use_for_ensemble": 0,
            "usage": 1,
            "run_feature_selection": false,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "svc__C": [0.1, 1, 10],
                "svc__kernel": ["linear", "rbf", "poly"],
                "svc__gamma": ["scale", "auto"],
                "svc__degree": [2, 3, 4],
                "svc__probability": [true]
              }
            }
          }
        },
        "probabilistic_models": {
          "ComplementNB": {
            "use_for_ensemble": 0,
            "usage": 1,
            "run_feature_selection": true,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "naivebayes__alpha": [
                  1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 0.001, 0.01, 0.1, 0.5, 1
                ]
              }
            }
          }
        },
        "tree": {
          "DecisionTreeClassifier": {
            "use_for_ensemble": 0,
            "usage": 1,
            "run_feature_selection": false,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "logisticregression__penalty": ["l1", "l2"],
                "logisticregression__C": "np.logspace(-3, 2, 6)",
                "logisticregression__solver": ["liblinear", "saga"]
              }
            }
          }
        },
        "ensemble": {
          "RandomForestClassifier": {
            "use_for_ensemble": 0,
            "usage": 1,
            "run_feature_selection": false,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "randomforestclassifier__n_estimators": [10, 50, 100, 200, 300],
                "randomforestclassifier__criterion": ["gini", "entropy"],
                "randomforestclassifier__max_depth": "np.arange(1,50,5)",
                "randomforestclassifier__min_samples_split": [2, 5, 10, 15, 20],
                "randomforestclassifier__min_samples_leaf": [1, 2, 4, 6, 8, 10],
                "randomforestclassifier__max_features": [
                  "auto",
                  "sqrt",
                  "log2",
                  "None"
                ],
                "randomforestclassifier__min_weight_fraction_leaf": "np.arange(0, 0.5)",
                "randomforestclassifier__max_leaf_nodes": [
                  "None",
                  50,
                  100,
                  200
                ],
                "randomforestclassifier__min_impurity_decrease": "np.logspace(-5, 0, 6)",
                "randomforestclassifier__ccp_alpha": "np.logspace(-4, 0, 5)"
              }
            }
          },
          "HistGradientBoostingClassifier": {
            "use_for_ensemble": 0,
            "usage": 1,
            "run_feature_selection": false,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "histgradientboostingclassifier__learning_rate": "np.logspace(-3, 0, 4)",
                "histgradientboostingclassifier__max_iter": [50, 100, 200, 300],
                "histgradientboostingclassifier__max_leaf_nodes": [
                  15, 31, 63, 127
                ],
                "histgradientboostingclassifier__max_depth": [
                  "None",
                  10,
                  20,
                  30
                ],
                "histgradientboostingclassifier__min_samples_leaf": [1, 2, 4],
                "histgradientboostingclassifier__l2_regularization": "np.logspace(-5, 10, 6)",
                "histgradientboostingclassifier__max_bins": [
                  5, 10, 100, 150, 200, 255
                ],
                "histgradientboostingclassifier__scoring": [
                  "loss",
                  "accuracy",
                  "roc_auc"
                ],
                "histgradientboostingclassifier__validation_fraction": "np.arange(0.1, 0.4)",
                "histgradientboostingclassifier__n_iter_no_change": [5, 10, 20],
                "histgradientboostingclassifier__tol": "np.logspace(-6, -2, 5)",
                "histgradientboostingclassifier__verbose": [3]
              }
            }
          }
        }
      }
    },
    "regression": {
      "usage": 0,
      "train_test_split": {
        "validation_size": 0.3,
        "test_size": 0.5,
        "shuffle": true,
        "stratify": true
      },
      "models": {
        "linear_model": {
          "LogisticRegression": {
            "use_for_ensemble": 0,
            "usage": 1,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "logisticregression__penalty": ["l1", "l2"],
                "logisticregression__C": "np.logspace(-3, 2, 6)",
                "logisticregression__solver": ["liblinear", "saga"],
                "logisticregression__max_iter": [10000]
              }
            }
          }
        },
        "tree": {
          "DecisionTreeClassifier": {
            "use_for_ensemble": 0,
            "usage": 0,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "logisticregression__penalty": ["l1", "l2"],
                "logisticregression__C": "np.logspace(-3, 2, 6)",
                "logisticregression__solver": ["liblinear", "saga"]
              }
            }
          }
        },
        "ensemble": {
          "RandomForestClassifier": {
            "use_for_ensemble": 0,
            "usage": 1,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "randomforestclassifier__n_estimators": [10, 50, 100, 200, 300],
                "randomforestclassifier__criterion": ["gini", "entropy"],
                "randomforestclassifier__max_depth": "np.arange(1,50,5)",
                "randomforestclassifier__min_samples_split": [2, 5, 10, 15, 20],
                "randomforestclassifier__min_samples_leaf": [1, 2, 4, 6, 8, 10],
                "randomforestclassifier__max_features": [
                  "auto",
                  "sqrt",
                  "log2",
                  "None"
                ],
                "randomforestclassifier__min_weight_fraction_leaf": "np.arange(0, 0.5)",
                "randomforestclassifier__max_leaf_nodes": [
                  "None",
                  50,
                  100,
                  200
                ],
                "randomforestclassifier__min_impurity_decrease": "np.logspace(-5, 0, 6)",
                "randomforestclassifier__ccp_alpha": "np.logspace(-4, 0, 5)"
              }
            }
          },
          "HistGradientBoostingClassifier": {
            "use_for_ensemble": 0,
            "usage": 1,
            "hyperparameters": {
              "hyperparameter_settings": {
                "n_iter": 10,
                "scoring": ["balanced_accuracy"],
                "cv": {
                  "RepeatedStratifiedKFold": {
                    "n_splits": 10,
                    "n_repeats": 3,
                    "random_state": 0
                  }
                },
                "n_jobs": 2
              },
              "param_distribution": {
                "histgradientboostingclassifier__learning_rate": "np.logspace(-3, 0, 4)",
                "histgradientboostingclassifier__max_iter": [50, 100, 200, 300],
                "histgradientboostingclassifier__max_leaf_nodes": [
                  15, 31, 63, 127
                ],
                "histgradientboostingclassifier__max_depth": [
                  "None",
                  10,
                  20,
                  30
                ],
                "histgradientboostingclassifier__min_samples_leaf": [1, 2, 4],
                "histgradientboostingclassifier__l2_regularization": "np.logspace(-5, 10, 6)",
                "histgradientboostingclassifier__max_bins": [
                  5, 10, 100, 150, 200, 255
                ],
                "histgradientboostingclassifier__scoring": [
                  "loss",
                  "accuracy",
                  "roc_auc"
                ],
                "histgradientboostingclassifier__validation_fraction": "np.arange(0.1, 0.4)",
                "histgradientboostingclassifier__n_iter_no_change": [5, 10, 20],
                "histgradientboostingclassifier__tol": "np.logspace(-6, -2, 5)",
                "histgradientboostingclassifier__verbose": [3]
              }
            }
          }
        }
      }
    }
  }
}
